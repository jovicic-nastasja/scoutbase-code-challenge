{"version":3,"sources":["components/Home.js","components/CountryItem.js","components/Countries.js","components/Country.js","components/Main.js","App.js","components/Header.js","index.js"],"names":["Home","SLink","styled","Link","CountryItemContainer","div","Panel","PanelHeading","PanelBody","PanelFooter","ListGroup","ListGroupItem","BoldTxt","span","ItalicTxt","CountryItem","country","code","name","native","emoji","continent","languages","map","language","i","length","to","GET_ALL_COUNTRIES","gql","CountriesContainer","CountriesList","Countries","Title","query","loading","error","data","console","log","countries","key","Component","h2","COUNTRY_QUERY","Country","this","props","match","params","variables","currency","phone","Main","exact","path","component","App","LinkText","NavbarInverse","NavbarContainer","NavbarHeader","Nav","Header","client","ApolloClient","uri","AppStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65de8cdb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>Welcome</h1>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SLink = styled(Link)`\r\n  color: black;\r\n  text-decoration: none;\r\n  color: grey;\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid grey;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst CountryItemContainer = styled.div`\r\n  box-sizing: border-box;\r\n  padding: 8px;\r\n  flex: 1 1 33%;\r\n  max-width: 33%;\r\n`;\r\n\r\nconst Panel = styled.div`\r\n  margin-bottom: 20px;\r\n  background-color: #fff;\r\n  border: 1px solid transparent;\r\n  border-radius: 4px;\r\n  border-color: #ddd;\r\n`;\r\n\r\nconst PanelHeading = styled.div`\r\n  padding: 10px 15px;\r\n  border-bottom: 1px solid transparent;\r\n  border-top-left-radius: 3px;\r\n  border-top-right-radius: 3px;\r\n  color: #333;\r\n  background-color: #f5f5f5;\r\n  border-color: #ddd;\r\n`;\r\n\r\nconst PanelBody = styled.div`\r\n  padding: 15px;\r\n`;\r\n\r\nconst PanelFooter = styled.div`\r\n  display: block;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst ListGroup = styled.div`\r\n  padding-left: 0;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ListGroupItem = styled.div`\r\n  position: relative;\r\n  display: block;\r\n  padding: 10px 15px;\r\n  margin-bottom: -1px;\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n  /* border-top-left-radius: 4px;\r\n  border-top-right-radius: 4px; */\r\n`;\r\n\r\nconst BoldTxt = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ItalicTxt = styled.span`\r\n  font-style: italic;\r\n`;\r\n\r\nexport default function CountryItem({\r\n  country: { code, name, native, emoji, continent, languages }\r\n}) {\r\n  return (\r\n    <CountryItemContainer>\r\n      <Panel>\r\n        <PanelHeading>\r\n          <BoldTxt>\r\n            {\" \"}\r\n            {emoji} {name} | {native}{\" \"}\r\n          </BoldTxt>\r\n        </PanelHeading>\r\n        <PanelBody>\r\n          <ListGroup>\r\n            <ListGroupItem>\r\n              <ItalicTxt>Continent:</ItalicTxt> {continent.name}\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <ItalicTxt>Languages: </ItalicTxt>\r\n              {languages.map((language, i) => {\r\n                return i === languages.length - 1\r\n                  ? language.name\r\n                  : language.name + \" | \";\r\n              })}\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <ItalicTxt>Native: </ItalicTxt>\r\n              {languages.map((language, i) => {\r\n                return i === languages.length - 1\r\n                  ? language.native\r\n                  : language.native + \" | \";\r\n              })}\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </PanelBody>\r\n        <PanelFooter>\r\n          <SLink to={`/countries/${code}`}>Details</SLink>\r\n        </PanelFooter>\r\n      </Panel>\r\n    </CountryItemContainer>\r\n  );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Query } from \"react-apollo\";\r\nimport CountryItem from \"./CountryItem\";\r\n// import Continents from \"./Continents\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GET_ALL_COUNTRIES = gql`\r\n  {\r\n    countries {\r\n      code\r\n      name\r\n      native\r\n      emoji\r\n      continent {\r\n        name\r\n      }\r\n      languages {\r\n        name\r\n        native\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CountriesContainer = styled.div`\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst CountriesList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport class Countries extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Title>Countries</Title>\r\n        <hr />\r\n        {/* <Continents/> */}\r\n        <Query query={GET_ALL_COUNTRIES}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <h4>Loading...</h4>;\r\n            if (error) console.log(error);\r\n\r\n            return (\r\n              <Fragment>\r\n                <CountriesContainer>\r\n                  <CountriesList>\r\n                    {data.countries.map(country => (\r\n                      <CountryItem key={country.code} country={country} />\r\n                    ))}\r\n                  </CountriesList>\r\n                </CountriesContainer>\r\n              </Fragment>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst Title = styled.h2`\r\n  color: #351e29;\r\n`;\r\n\r\nexport default Countries;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Query } from \"react-apollo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst COUNTRY_QUERY = gql`\r\n  query CountryQuery($code: String!) {\r\n    country(code: $code) {\r\n      code\r\n      name\r\n      currency\r\n      phone\r\n    }\r\n  }\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  color: black;\r\n  text-decoration: none;\r\n  color: grey;\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid grey;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst CountryItemContainer = styled.div`\r\n  box-sizing: border-box;\r\n  padding: 8px;\r\n  display: inline-block;\r\n`;\r\n\r\nconst Panel = styled.div`\r\n  margin-bottom: 20px;\r\n  background-color: #fff;\r\n  border: 1px solid transparent;\r\n  border-radius: 4px;\r\n  border-color: #ddd;\r\n`;\r\n\r\nconst PanelHeading = styled.div`\r\n  padding: 10px 15px;\r\n  border-bottom: 1px solid transparent;\r\n  border-top-left-radius: 3px;\r\n  border-top-right-radius: 3px;\r\n  color: #333;\r\n  background-color: #f5f5f5;\r\n  border-color: #ddd;\r\n`;\r\n\r\nconst PanelBody = styled.div`\r\n  padding: 15px;\r\n`;\r\n\r\nconst ListGroup = styled.div`\r\n  padding-left: 0;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ListGroupItem = styled.div`\r\n  position: relative;\r\n  display: block;\r\n  padding: 10px 15px;\r\n  margin-bottom: -1px;\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nconst BoldTxt = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ItalicTxt = styled.span`\r\n  font-style: italic;\r\n`;\r\n\r\nexport class Country extends Component {\r\n  render() {\r\n    let { code } = this.props.match.params;\r\n    return (\r\n      <Fragment>\r\n        <Query query={COUNTRY_QUERY} variables={{ code }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <h4>Loading...</h4>;\r\n            if (error) console.log(error);\r\n\r\n            const { name, currency, phone } = data.country;\r\n\r\n            return (\r\n              <CountryItemContainer>\r\n                <Panel>\r\n                  <PanelHeading>\r\n                    <BoldTxt>Country name: </BoldTxt>\r\n                    {name}\r\n                  </PanelHeading>\r\n                  <PanelBody>\r\n                    <ListGroup>\r\n                      <ListGroupItem>\r\n                        <ItalicTxt>Currency: {currency}</ItalicTxt>\r\n                      </ListGroupItem>\r\n                      <ListGroupItem>\r\n                        <ItalicTxt>Area code:</ItalicTxt> {phone}\r\n                      </ListGroupItem>\r\n                    </ListGroup>\r\n                  </PanelBody>\r\n                </Panel>\r\n                <hr />\r\n                <SLink to=\"/countries\">Back</SLink>\r\n              </CountryItemContainer>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Countries from \"./Countries\";\r\nimport Country from \"./Country\";\r\n// import Continents from './Continents';\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/countries\" component={Countries} />\r\n      <Route path=\"/countries/:code\" component={Country} />\r\n      {/* <Route exact path='/continents' component={Continents}/> */}\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LinkText = styled(Link)`\r\n  color: white;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst NavbarInverse = styled.div`\r\n  background-color: #222;\r\n  border-color: #080808;\r\n  border: 1px solid transparent;\r\n  margin-bottom: 20px;\r\n  min-height: 50px;\r\n  position: relative;\r\n`;\r\n\r\nconst NavbarContainer = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nconst NavbarHeader = styled.div`\r\n  float: left;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Nav = styled.div`\r\n  margin-top: 0px;\r\n  margin-bottom: 10px;\r\n  display: block;\r\n  list-style-type: disc;\r\n  margin-block-start: 1em;\r\n  margin-block-end: 1em;\r\n  margin-inline-start: 0px;\r\n  margin-inline-end: 0px;\r\n  padding-inline-start: 40px;\r\n`;\r\n\r\nconst Header = () => (\r\n  <NavbarInverse>\r\n    <NavbarContainer>\r\n      <NavbarHeader>\r\n        <LinkText to=\"/\">Home</LinkText>\r\n      </NavbarHeader>\r\n      <Nav>\r\n        <LinkText to=\"/countries\">Countries</LinkText>\r\n      </Nav>\r\n    </NavbarContainer>\r\n  </NavbarInverse>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./countries-styles.css\";\nimport App from \"./App\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport styled from \"styled-components\";\n\nconst client = new ApolloClient({\n  uri: \"https://countries.trevorblades.com\"\n});\n\nconst AppStyle = styled.div`\n  font-family: sans-serif;\n  text-align: center;\n  max-width: 1100px;\n  margin: 0 auto;\n  min-height: 100vn;\n`;\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <Header />\n      <AppStyle>\n        <App />\n      </AppStyle>\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}